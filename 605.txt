class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        int len=flowerbed.size();
        if(len==1)
        {
            if(flowerbed[0]==0){
            if(n<=1)
            {
                return true;
            }
            return false;
            }
            else{
                if(n==0)
                {
                    return true;
                }
                return false;
            }
        }
        if(n==0)
        {
            return true;
        }
        for(int i=0;i<len;i++)
        {
            if(i==0 && flowerbed[i]==0)
            {
                if(flowerbed[i+1]==0)
                {
                    
                    n--;
                    flowerbed[i]=1;
                    if(n==0)
                    {
                        return true;
                    }
                }
            }
            else if(i==len-1 && flowerbed[i]==0)
            {
                if(n==0)
                    {
                        return true;
                    }
                if(flowerbed[i-1]==0)
                {
                    if(n==0)
                    {
                        return true;
                    }
                    n--;
                    flowerbed[i]=1;
                    if(n==0)
                    {
                        return true;
                    }
                }
            }
            else{
                if(flowerbed[i]==0 && flowerbed[i-1]==0 && flowerbed[i+1]==0)
                {
                    if(n==0)
                    {
                        return true;
                    }
                    n--;
                    flowerbed[i]=1;
                    if(n==0)
                    {
                        return true;
                    }
                }
            }
        }
        cout<<n<<endl;
        if(n==0)
        {
            return true;
        }
        return false;
        
    }
};