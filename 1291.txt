class Solution {
public:
    bool isBounds(int low,int high,int numb)
    {
        return (numb>=low && numb<=high);
    }
    vector<int> myHelper(int digits)
    {
        vector<int> dig{1,2,3,4,5,6,7,8,9};
        vector<int> retans;
        
        for(int i=0;i+digits<=9;i++)
        {
            int number=0;
            int j=i;
            while(j<i+digits)
            {
                number=number*10 + dig[j];
                j++;
            }
            retans.push_back(number);
        }
        return retans;
    }
    vector<int> sequentialDigits(int low, int high) {
        int lowDigits=0;
        int highDigits=0;
        int lowTemp=low;int highTemp=high;
        while(lowTemp>0)
        {
            lowDigits++;lowTemp/=10;
        }
        while(highTemp>0)
        {
            highDigits++;highTemp/=10;
        }
        vector<int> retans;
        for(int i=lowDigits;i<=highDigits;i++)
        {
            vector<int> arr=myHelper(i);
            for(auto el: arr)
            {
                if(isBounds(low,high,el))
                {
                    retans.push_back(el);
                }
            }
        }
        return retans;
        
    }
};